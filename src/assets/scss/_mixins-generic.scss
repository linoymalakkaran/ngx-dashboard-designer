// ------------------------------------------
// Table of contents
// ------------------------------------------
// padding
// margin
// float
// text align
// clear
// left / right
// border
//  - width
//  - style
//  - color
//  - generic
//  - radius
// ltr / rtl contents
// ------------------------------------------

// generic mixin for properties with values
// (top right bottom left)
// ------------------------------------------
@mixin bi-app-compact($property, $top, $right, $bottom, $left) {
  @if $bi-app-direction == ltr {
    #{$property}: $top $right $bottom $left;
  } @else {
    #{$property}: $top $left $bottom $right;
  }
}

// padding
// ------------------------------------------
@mixin padding-left($distance) {
  padding-#{$bi-app-left}: $distance;
}

@mixin padding-right($distance) {
  padding-#{$bi-app-right}: $distance;
}

@mixin padding($top, $right, $bottom, $left) {
  @include bi-app-compact(padding, $top, $right, $bottom, $left);
}

// margin
// ------------------------------------------
@mixin margin-left($distance) {
  margin-#{$bi-app-left}: $distance;
}

@mixin margin-right($distance) {
  margin-#{$bi-app-right}: $distance;
}

@mixin margin($top, $right, $bottom, $left) {
  @include bi-app-compact(margin, $top, $right, $bottom, $left);
}

// float
// ------------------------------------------
@mixin bi-app-float-left($important: '') {
  float: $bi-app-left unquote($important);
}

@mixin bi-app-float-right($important: '') {
  float: $bi-app-right unquote($important);
}

@mixin float($direction, $important: '') {
  @if $direction == left {
    @include bi-app-float-left($important);
  } @else if $direction == right {
    @include bi-app-float-right($important);
  } @else {
    float: $direction;
  }
}

// text align
// ------------------------------------------
@mixin bi-app-text-align-left {
  text-align: $bi-app-left;
}

@mixin bi-app-text-align-right {
  text-align: $bi-app-right;
}

@mixin text-align($direction) {
  @if $direction == left {
    @include bi-app-text-align-left;
  } @else if $direction == right {
    @include bi-app-text-align-right;
  } @else {
    text-align: $direction;
  }
}

// clear
// ------------------------------------------
@mixin bi-app-clear-left {
  clear: $bi-app-left;
}

@mixin bi-app-clear-right {
  clear: $bi-app-right;
}

@mixin clear($direction) {
  @if $direction == left {
    @include bi-app-clear-left;
  } @else if $direction == right {
    @include bi-app-clear-right;
  } @else {
    clear: $direction;
  }
}

// left / right
// ------------------------------------------
@mixin left($distance) {
  @if $bi-app-direction == ltr {
    left: $distance;
  } @else if $bi-app-direction == rtl {
    right: $distance;
  }
}

@mixin right($distance) {
  @if $bi-app-direction == ltr {
    right: $distance;
  } @else if $bi-app-direction == rtl {
    left: $distance;
  }
}

// border
// ------------------------------------------

// width
@mixin border-left-width($width) {
  border-#{$bi-app-left}-width: $width;
}

@mixin border-right-width($width) {
  border-#{$bi-app-right}-width: $width;
}

@mixin border-width($top, $right, $bottom, $left) {
  @include bi-app-compact(border-width, $top, $right, $bottom, $left);
}

// style
@mixin border-left-style($style) {
  border-#{$bi-app-left}-style: $style;
}

@mixin border-right-style($style) {
  border-#{$bi-app-right}-style: $style;
}

@mixin border-style($top, $right, $bottom, $left) {
  @include bi-app-compact(border-style, $top, $right, $bottom, $left);
}

// color
@mixin border-left-color($color) {
  border-#{$bi-app-left}-color: $color;
}

@mixin border-right-color($color) {
  border-#{$bi-app-right}-color: $color;
}

@mixin border-color($top, $right, $bottom, $left) {
  @include bi-app-compact(border-color, $top, $right, $bottom, $left);
}

// generic
@mixin border-left($border-style) {
  border-#{$bi-app-left}: $border-style;
}

@mixin border-right($border-style) {
  border-#{$bi-app-right}: $border-style;
}

// radius
@mixin border-top-left-radius($radius) {
  -webkit-border-top-#{$bi-app-left}-radius: $radius;
  -moz-border-top#{$bi-app-left}-radius: $radius;
  border-top-#{$bi-app-left}-radius: $radius;
}

@mixin border-top-right-radius($radius) {
  -webkit-border-top-#{$bi-app-right}-radius: $radius;
  -moz-border-top#{$bi-app-right}-radius: $radius;
  border-top-#{$bi-app-right}-radius: $radius;
}

@mixin border-bottom-left-radius($radius) {
  -webkit-border-bottom-#{$bi-app-left}-radius: $radius;
  -moz-border-bottom#{$bi-app-left}-radius: $radius;
  border-bottom-#{$bi-app-left}-radius: $radius;
}

@mixin border-bottom-right-radius($radius) {
  -webkit-border-bottom-#{$bi-app-right}-radius: $radius;
  -moz-border-bottom#{$bi-app-right}-radius: $radius;
  border-bottom-#{$bi-app-right}-radius: $radius;
}

@mixin border-right-radius($radius) {
  @include border-top-right-radius($radius);
  @include border-bottom-right-radius($radius);
}

@mixin border-left-radius($radius) {
  @include border-top-left-radius($radius);
  @include border-bottom-left-radius($radius);
}

@mixin border-top-radius($radius) {
  @include border-top-left-radius($radius);
  @include border-top-right-radius($radius);
}

@mixin border-bottom-radius($radius) {
  @include border-bottom-left-radius($radius);
  @include border-bottom-right-radius($radius);
}

@mixin border-radius(
  $topLeft,
  $topRight: null,
  $bottomRight: null,
  $bottomLeft: null
) {
  @if $topRight != null {
    @include border-top-left-radius($topLeft);
    @include border-top-right-radius($topRight);
    @include border-bottom-right-radius($bottomRight);
    @include border-bottom-left-radius($bottomLeft);
  } @else {
    -webkit-border-radius: $topLeft;
    -moz-border-radius: $topLeft;
    -ms-border-radius: $topLeft;
    -o-border-radius: $topLeft;
    border-radius: $topLeft;
  }
}

// Returns "en" or "ar", useful for image suffixes.
// Usage: background-image: url(/img/header-#{lang()}.png);
@function lang() {
  @if $bi-app-direction == ltr {
    @return 'en';
  } @else {
    @return 'ar';
  }
}

// Support for "direction" declaration (renders ltr/rtl).
// Useful for form elements as they swap the text-indent property and align the text accordingly.
@mixin direction {
  direction: $bi-app-direction;
}

// Inverts a percentage value. Example: 97% becames 3%.
// Useful for background-position.
@function bi-app-invert-percentage($percentage) {
  @if $bi-app-direction == rtl {
    @return 100% - $percentage;
  } @else {
    @return $percentage;
  }
}

// ltr / rtl contents
// ------------------------------------------
@mixin ltr {
  @if $bi-app-direction == ltr {
    @content;
  }
}

@mixin rtl {
  @if $bi-app-direction == rtl {
    @content;
  }
}

//  @include box-sizing(border-box);
@mixin box-sizing($type) {
  -webkit-box-sizing: $type;
  -moz-box-sizing: $type;
  box-sizing: $type;
}

//  @include opacity(0.5);
@mixin opacity($opacity) {
  opacity: $opacity;
  filter: alpha(opacity=($opacity * 100));
}

// 	@include box-shadow(5px, 5px, 5px, #333)
@mixin box-shadow($x-axis: 0, $y-axis: 1px, $blur: 2px, $color: $default) {
  box-shadow: $x-axis $y-axis $blur $color;
}

// @include flexbox();
@mixin flexbox {
  display: -webkit-box; // old
  display: -moz-box; // old
  display: -ms-flexbox; // ie
  display: -webkit-flex; // new
  display: flex; // new
}
//  @include transition(all 0.4s ease-in-out 0s);
@mixin transition($args...) {
  -webkit-transition: $args;
  -moz-transition: $args;
  -ms-transition: $args;
  -o-transition: $args;
  transition: $args;
}
//  place holder styling
@mixin placeholder {
  ::-webkit-input-placeholder {
    @content;
  }
  :-moz-placeholder {
    @content;
  }
  ::-moz-placeholder {
    @content;
  }
  :-ms-input-placeholder {
    @content;
  }
}

// @include translate(-50%, -50%);
@mixin translate($x, $y) {
  -webkit-transform: translate($x, $y);
  -moz-transform: translate($x, $y);
  -ms-transform: translate($x, $y);
  -o-transform: translate($x, $y);
  transform: translate($x, $y);
}

@mixin respond-to($media) {
  @media only screen and #{$media} {
    @content;
  }
}

@mixin make-col($size: false, $columns: false) {
  @debug 'the value of $size is `#{$size}` $columns is `#{$columns}`';

  @if $size {
    flex: 0 0 auto;
    width: percentage(($size/ $columns));
  } @else {
    flex: 1 1 0;
    max-width: 100%;
  }
}
